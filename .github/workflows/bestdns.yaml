name: Update BestDNS

on:
  repository_dispatch:
    types: [bestdns-update]

permissions:
  contents: write

jobs:
  update-bestdns:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify and prepare input files
        run: |
          # 检查 Fission_ip.txt 是否存在
          if [ ! -f "Fission_ip.txt" ]; then
            echo "Error: Fission_ip.txt not found. Please include this file in the repository." >&2
            exit 1
          fi

          # 确保 Fission_domain.txt 存在，如果没有则创建
          touch Fission_domain.txt

      - name: Execute BestDNS Logic
        run: |
          echo "BestDNS workflow triggered by ip.yaml"

      - name: Run Fission script
        id: run-fission-script
        run: python Fission.py

      - name: Commit and push output files
        if: steps.run-fission-script.outcome == 'success'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # 添加并提交更改
          git add Fission_domain.txt
          git commit -m "Update output files from Fission.py execution [skip ci]"
          git push

       # 等待 5 秒
      - name: Wait 5 seconds
        run: sleep 5

      - name: Trigger HTTPX-Scan workflow
        if: steps.run-fission-script.outcome == 'success'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"event_type": "httpx-scan-trigger"}' \
            https://api.github.com/repos/${{ github.repository }}/dispatches
