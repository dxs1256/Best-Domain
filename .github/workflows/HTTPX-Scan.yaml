name: Check Domains

on:
  push:
    paths:
      - 'Fission_domain.txt'
    branches:
      - main
  workflow_dispatch:

jobs:
  check-domains:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install httpx
        run: |
          go install github.com/projectdiscovery/httpx/cmd/httpx@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Check domains
        run: |
          if [ ! -f Last-domain.txt ]; then
            touch Last-domain.txt
          fi
          > Last-domain.txt
          cat Fission_domain.txt | httpx -silent -mc 200 > Last-domain.txt

      - name: Remove protocol prefixes
        run: |
          sed -i 's|^https://||g; s|^http://||g' Last-domain.txt

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add Last-domain.txt
          git commit -m "Update Last-domain.txt with domains without protocol"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    runs-on: ubuntu-latest
    needs: check-domains
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Authenticate with GitHub CLI
        run: echo "${{ secrets.DEL_TOKEN }}" | gh auth login --with-token

      - name: Verify GitHub CLI Installation
        run: gh --version

      - name: Cleanup old workflow runs
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          set -x
          REPO=${GITHUB_REPOSITORY}
          WORKFLOWS=$(gh api repos/${REPO}/actions/workflows --jq '.workflows[].id')

          for WORKFLOW_ID in $WORKFLOWS; do
            echo "Processing workflow ID $WORKFLOW_ID"
            RUN_IDS=$(gh api repos/${REPO}/actions/workflows/${WORKFLOW_ID}/runs --jq '.workflow_runs[].id')

            RUN_IDS_ARRAY=($RUN_IDS)
            NUM_TO_DELETE=$((${#RUN_IDS_ARRAY[@]} - 10))

            if [ $NUM_TO_DELETE -gt 0 ]; then
              echo "Deleting $NUM_TO_DELETE old workflow runs for workflow ID $WORKFLOW_ID."

              for ((i=0; i<$NUM_TO_DELETE; i++)); do
                RUN_ID=${RUN_IDS_ARRAY[$i]}
                echo "Deleting run ID $RUN_ID"
                gh api repos/${REPO}/actions/runs/${RUN_ID} -X DELETE
              done
            else
              echo "No old runs to delete for workflow ID $WORKFLOW_ID."
            fi
          done
